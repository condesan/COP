<?php
// $Id: taxonomy_defaults.module,v 1.11.2.3.2.4 2008/12/04 04:20:44 sleepcamel Exp $

/**
 * @file
 * Taxonomy defaults - allows assignment of default terms to node types, either
 *  - hidden, added after node submission. Change is not possible.
 *  - preselected in the category form for vocabularies assigned to the node type. Change is allowed.
 */

/**
 * Implementation of hook_help().
 *
 */
function taxonomy_defaults_help($path, $arg) {
  switch ($path) {
    case 'admin/content/taxonomy/taxonomy_defaults':
      $output  = '<p>'. t("Below you may select default terms for each content type. Check the 'Enabled' box next to the vocabulary, then select the terms.") .'</p>' ;
      return $output;
  }
}

/**
 * Define a custom callback to assign default terms menu at a tab on admin/taxonomy.
 *
 * Implementation of hook_menu.
 */
function taxonomy_defaults_menu() {
  $items['admin/content/taxonomy/taxonomy_defaults'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'Default terms',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('taxonomy_defaults_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'taxonomy_defaults.admin.inc',
  );
  return $items;
}

/**
 * Implementation of hook_theme.
 *
 * @return unknown
 */
function taxonomy_defaults_theme() {
  return array(
    'taxonomy_defaults_form' => array(
      'arguments' => array('form'),
      'file' => 'taxonomy_defaults.admin.inc',
    ),
  );
}


/**
 * Adds the defaults for active vocabularies as preselected terms to '$node->taxonomy'
 * This requires a weight lower than taxonomy.module.
 */
function taxonomy_defaults_form_alter(&$form, &$form_state, $form_id) {
  // Only alter node forms
  if (isset($form['type']) && $form['type']['#value'] .'_node_form' == $form_id && !isset($form_state['node_preview'])) {
    $node = $form['#node'];
    // Do not preselect terms on nodes that already have been edited
    if (!isset($node->nid)) {
      // Add the default 'pre-selected' terms to $node->taxonomy
      foreach (taxonomy_get_vocabularies($node->type) as $vid => $vocab) {
        if (variable_get("taxdef_{$node->type}_{$vid}_active", FALSE)) {
          $default_tids = variable_get("taxdef_{$node->type}_{$vid}", array());
          foreach ($default_tids as $default_tid) {
            $term = taxonomy_get_term($default_tid);
            $form['#node']->taxonomy[$default_tid] = $term;
          }
        }
      }
    }
  }
}

/**
 * Adds selected default terms from non-active vocabularies to newly created nodes
 */
function taxonomy_defaults_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
  if ($op == 'presave') {
    $taxonomy = $node->taxonomy;
    $type_vocabularies = taxonomy_get_vocabularies($node->type);
    foreach (taxonomy_get_vocabularies() as $vid => $vocab) {
      $activevocab = array_key_exists($vid, $type_vocabularies);
      // Active vocabs have been inserted via the form already and may have been modified by the user
      if (!$activevocab && variable_get("taxdef_{$node->type}_{$vid}_active", FALSE)) {
        $default_tids = variable_get("taxdef_{$node->type}_{$vid}", array());
        $taxonomy[$vid] = $vocab->multiple ? $default_tids : $default_tids[0];
      }
    }
    if (isset($taxonomy)) {
      $node->taxonomy = $taxonomy;
    }
  }
}